{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c50a093c-1ab7-4fb0-b143-d06ac1e10a91",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Close/Last</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>29-09-2015</td>\n",
       "      <td>0.5928</td>\n",
       "      <td>380678920</td>\n",
       "      <td>$0.5888</td>\n",
       "      <td>$0.5938</td>\n",
       "      <td>$0.5805</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>30-09-2015</td>\n",
       "      <td>0.6162</td>\n",
       "      <td>556344400</td>\n",
       "      <td>$0.5983</td>\n",
       "      <td>$0.617</td>\n",
       "      <td>$0.5948</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>01-10-2015</td>\n",
       "      <td>0.6043</td>\n",
       "      <td>488321200</td>\n",
       "      <td>$0.6162</td>\n",
       "      <td>$0.618</td>\n",
       "      <td>$0.5867</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>02-10-2015</td>\n",
       "      <td>0.6200</td>\n",
       "      <td>386115200</td>\n",
       "      <td>$0.601</td>\n",
       "      <td>$0.62</td>\n",
       "      <td>$0.5948</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>05-10-2015</td>\n",
       "      <td>0.6355</td>\n",
       "      <td>482000800</td>\n",
       "      <td>$0.624</td>\n",
       "      <td>$0.6433</td>\n",
       "      <td>$0.6208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2509</th>\n",
       "      <td>22-09-2025</td>\n",
       "      <td>183.6100</td>\n",
       "      <td>269637000</td>\n",
       "      <td>$175.30</td>\n",
       "      <td>$184.55</td>\n",
       "      <td>$174.7053</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2510</th>\n",
       "      <td>23-09-2025</td>\n",
       "      <td>178.4300</td>\n",
       "      <td>192559600</td>\n",
       "      <td>$181.97</td>\n",
       "      <td>$182.42</td>\n",
       "      <td>$176.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2511</th>\n",
       "      <td>24-09-2025</td>\n",
       "      <td>176.9700</td>\n",
       "      <td>143564100</td>\n",
       "      <td>$179.77</td>\n",
       "      <td>$179.78</td>\n",
       "      <td>$175.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2512</th>\n",
       "      <td>25-09-2025</td>\n",
       "      <td>177.6900</td>\n",
       "      <td>191586700</td>\n",
       "      <td>$174.48</td>\n",
       "      <td>$180.26</td>\n",
       "      <td>$173.125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2513</th>\n",
       "      <td>26-09-2025</td>\n",
       "      <td>178.1900</td>\n",
       "      <td>148573700</td>\n",
       "      <td>$178.17</td>\n",
       "      <td>$179.77</td>\n",
       "      <td>$174.93</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2514 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Date  Close/Last     Volume     Open     High        Low\n",
       "0     29-09-2015      0.5928  380678920  $0.5888  $0.5938    $0.5805\n",
       "1     30-09-2015      0.6162  556344400  $0.5983   $0.617    $0.5948\n",
       "2     01-10-2015      0.6043  488321200  $0.6162   $0.618    $0.5867\n",
       "3     02-10-2015      0.6200  386115200   $0.601    $0.62    $0.5948\n",
       "4     05-10-2015      0.6355  482000800   $0.624  $0.6433    $0.6208\n",
       "...          ...         ...        ...      ...      ...        ...\n",
       "2509  22-09-2025    183.6100  269637000  $175.30  $184.55  $174.7053\n",
       "2510  23-09-2025    178.4300  192559600  $181.97  $182.42    $176.21\n",
       "2511  24-09-2025    176.9700  143564100  $179.77  $179.78    $175.40\n",
       "2512  25-09-2025    177.6900  191586700  $174.48  $180.26   $173.125\n",
       "2513  26-09-2025    178.1900  148573700  $178.17  $179.77    $174.93\n",
       "\n",
       "[2514 rows x 6 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "df=pd.read_csv(\"Nvidia Stock Price for LSTM.csv\")\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "1d396700-d728-4fd3-8d70-abe2d3f6a752",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Splitting data into training and testing\n",
    "# Use closing price values\n",
    "data = df[['Close/Last']].values\n",
    "# Define split ratio\n",
    "train_size = int(len(data) * 0.8)  # 80% train, 20% test\n",
    "\n",
    "train = data[:train_size]\n",
    "test = data[train_size:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "6351bdf9-6ce0-4c4c-8453-17c281341a15",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.00000000e+00],\n",
       "       [4.79879907e-04],\n",
       "       [2.35838416e-04],\n",
       "       ...,\n",
       "       [8.29006895e-01],\n",
       "       [8.41167954e-01],\n",
       "       [8.53718659e-01]])"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.preprocessing import MinMaxScaler\n",
    "scaler = MinMaxScaler(feature_range=(0,1))\n",
    "data_training_array = scaler.fit_transform(train)\n",
    "data_training_array"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "43b40127-f9a6-48a0-ad70-af0f4293bce3",
   "metadata": {},
   "outputs": [],
   "source": [
    "x_train = []\n",
    "y_train = [] \n",
    "\n",
    "for i in range(100, data_training_array.shape[0]):\n",
    "    x_train.append(data_training_array[i-100: i])\n",
    "    y_train.append(data_training_array[i, 0])\n",
    "\n",
    "x_train, y_train = np.array(x_train), np.array(y_train) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "dc3647a0-006b-45cd-8802-e7171673d989",
   "metadata": {},
   "outputs": [],
   "source": [
    "x_test = []\n",
    "y_test = [] \n",
    "\n",
    "for i in range(100, data_training_array.shape[0]):\n",
    "    x_test.append(data_training_array[i-100: i])\n",
    "    y_test.append(data_training_array[i, 0])\n",
    "\n",
    "x_test, y_test = np.array(x_test), np.array(y_test) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "84416c74-76d3-4936-96fa-b906531ff9ba",
   "metadata": {},
   "outputs": [],
   "source": [
    "from tensorflow.keras.layers import Dense, Dropout, LSTM\n",
    "from tensorflow.keras.models import Sequential"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "7cebd9bb-125b-4657-a7ec-8aa6fa3226df",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras\\src\\layers\\rnn\\rnn.py:200: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n",
      "  super().__init__(**kwargs)\n"
     ]
    }
   ],
   "source": [
    "model = Sequential()\n",
    "model.add(LSTM(units = 50, activation = 'relu', return_sequences=True\n",
    "              ,input_shape = (X_train.shape[1], 1)))\n",
    "model.add(Dropout(0.2))\n",
    "\n",
    "\n",
    "model.add(LSTM(units = 60, activation = 'relu', return_sequences=True))\n",
    "model.add(Dropout(0.3))\n",
    "\n",
    "\n",
    "model.add(LSTM(units = 80, activation = 'relu', return_sequences=True))\n",
    "model.add(Dropout(0.4))\n",
    "\n",
    "\n",
    "model.add(LSTM(units = 120, activation = 'relu'))\n",
    "model.add(Dropout(0.5))\n",
    "\n",
    "model.add(Dense(units = 1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "94a492cd-2aac-4eed-91c1-4c090634855e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_2\"</span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1mModel: \"sequential_2\"\u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n",
       "┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n",
       "│ lstm_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)             │          <span style=\"color: #00af00; text-decoration-color: #00af00\">10,400</span> │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dropout_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">50</span>)             │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ lstm_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">60</span>)             │          <span style=\"color: #00af00; text-decoration-color: #00af00\">26,640</span> │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dropout_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">60</span>)             │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ lstm_6 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">80</span>)             │          <span style=\"color: #00af00; text-decoration-color: #00af00\">45,120</span> │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dropout_6 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">100</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">80</span>)             │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ lstm_7 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">120</span>)                 │          <span style=\"color: #00af00; text-decoration-color: #00af00\">96,480</span> │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dropout_7 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">120</span>)                 │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)                   │             <span style=\"color: #00af00; text-decoration-color: #00af00\">121</span> │\n",
       "└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n",
       "</pre>\n"
      ],
      "text/plain": [
       "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n",
       "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n",
       "│ lstm_4 (\u001b[38;5;33mLSTM\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m, \u001b[38;5;34m50\u001b[0m)             │          \u001b[38;5;34m10,400\u001b[0m │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dropout_4 (\u001b[38;5;33mDropout\u001b[0m)                  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m, \u001b[38;5;34m50\u001b[0m)             │               \u001b[38;5;34m0\u001b[0m │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ lstm_5 (\u001b[38;5;33mLSTM\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m, \u001b[38;5;34m60\u001b[0m)             │          \u001b[38;5;34m26,640\u001b[0m │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dropout_5 (\u001b[38;5;33mDropout\u001b[0m)                  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m, \u001b[38;5;34m60\u001b[0m)             │               \u001b[38;5;34m0\u001b[0m │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ lstm_6 (\u001b[38;5;33mLSTM\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m, \u001b[38;5;34m80\u001b[0m)             │          \u001b[38;5;34m45,120\u001b[0m │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dropout_6 (\u001b[38;5;33mDropout\u001b[0m)                  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m100\u001b[0m, \u001b[38;5;34m80\u001b[0m)             │               \u001b[38;5;34m0\u001b[0m │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ lstm_7 (\u001b[38;5;33mLSTM\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m120\u001b[0m)                 │          \u001b[38;5;34m96,480\u001b[0m │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dropout_7 (\u001b[38;5;33mDropout\u001b[0m)                  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m120\u001b[0m)                 │               \u001b[38;5;34m0\u001b[0m │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)                   │             \u001b[38;5;34m121\u001b[0m │\n",
       "└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">178,761</span> (698.29 KB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m178,761\u001b[0m (698.29 KB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">178,761</span> (698.29 KB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m178,761\u001b[0m (698.29 KB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6e0ad1c8-b956-4183-aa91-b1dc2f00dbb2",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Training the Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "72ecee50-349a-47eb-9e0b-bb38506a627c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m16s\u001b[0m 181ms/step - MAE: 0.1380 - loss: 0.0465 - val_MAE: 0.0322 - val_loss: 0.0021\n",
      "Epoch 2/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 174ms/step - MAE: 0.0451 - loss: 0.0049 - val_MAE: 0.0412 - val_loss: 0.0042\n",
      "Epoch 3/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 181ms/step - MAE: 0.0432 - loss: 0.0052 - val_MAE: 0.0423 - val_loss: 0.0029\n",
      "Epoch 4/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 177ms/step - MAE: 0.0422 - loss: 0.0043 - val_MAE: 0.0271 - val_loss: 0.0015\n",
      "Epoch 5/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 196ms/step - MAE: 0.0437 - loss: 0.0046 - val_MAE: 0.0273 - val_loss: 0.0020\n",
      "Epoch 6/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 210ms/step - MAE: 0.0363 - loss: 0.0038 - val_MAE: 0.0231 - val_loss: 0.0014\n",
      "Epoch 7/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 217ms/step - MAE: 0.0341 - loss: 0.0031 - val_MAE: 0.0245 - val_loss: 0.0012\n",
      "Epoch 8/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 203ms/step - MAE: 0.0365 - loss: 0.0033 - val_MAE: 0.0237 - val_loss: 0.0013\n",
      "Epoch 9/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 186ms/step - MAE: 0.0324 - loss: 0.0030 - val_MAE: 0.0386 - val_loss: 0.0035\n",
      "Epoch 10/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 185ms/step - MAE: 0.0335 - loss: 0.0031 - val_MAE: 0.0278 - val_loss: 0.0014\n",
      "Epoch 11/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 185ms/step - MAE: 0.0355 - loss: 0.0033 - val_MAE: 0.0212 - val_loss: 0.0010\n",
      "Epoch 12/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 188ms/step - MAE: 0.0347 - loss: 0.0032 - val_MAE: 0.0352 - val_loss: 0.0026\n",
      "Epoch 13/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 188ms/step - MAE: 0.0310 - loss: 0.0025 - val_MAE: 0.0200 - val_loss: 9.3152e-04\n",
      "Epoch 14/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 177ms/step - MAE: 0.0289 - loss: 0.0021 - val_MAE: 0.0254 - val_loss: 0.0012\n",
      "Epoch 15/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 201ms/step - MAE: 0.0326 - loss: 0.0029 - val_MAE: 0.0302 - val_loss: 0.0018\n",
      "Epoch 16/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 233ms/step - MAE: 0.0317 - loss: 0.0027 - val_MAE: 0.0255 - val_loss: 0.0012\n",
      "Epoch 17/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 207ms/step - MAE: 0.0315 - loss: 0.0027 - val_MAE: 0.0249 - val_loss: 0.0011\n",
      "Epoch 18/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 212ms/step - MAE: 0.0272 - loss: 0.0020 - val_MAE: 0.0313 - val_loss: 0.0015\n",
      "Epoch 19/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 189ms/step - MAE: 0.0300 - loss: 0.0023 - val_MAE: 0.0228 - val_loss: 9.8013e-04\n",
      "Epoch 20/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 185ms/step - MAE: 0.0270 - loss: 0.0019 - val_MAE: 0.0341 - val_loss: 0.0018\n",
      "Epoch 21/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 184ms/step - MAE: 0.0304 - loss: 0.0025 - val_MAE: 0.0296 - val_loss: 0.0014\n",
      "Epoch 22/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 183ms/step - MAE: 0.0300 - loss: 0.0024 - val_MAE: 0.0276 - val_loss: 0.0012\n",
      "Epoch 23/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 173ms/step - MAE: 0.0294 - loss: 0.0026 - val_MAE: 0.0269 - val_loss: 0.0011\n",
      "Epoch 24/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 184ms/step - MAE: 0.0288 - loss: 0.0022 - val_MAE: 0.0279 - val_loss: 0.0014\n",
      "Epoch 25/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 178ms/step - MAE: 0.0305 - loss: 0.0027 - val_MAE: 0.0310 - val_loss: 0.0015\n",
      "Epoch 26/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 204ms/step - MAE: 0.0275 - loss: 0.0019 - val_MAE: 0.0310 - val_loss: 0.0016\n",
      "Epoch 27/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 203ms/step - MAE: 0.0308 - loss: 0.0022 - val_MAE: 0.0340 - val_loss: 0.0018\n",
      "Epoch 28/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 208ms/step - MAE: 0.0299 - loss: 0.0024 - val_MAE: 0.0329 - val_loss: 0.0014\n",
      "Epoch 29/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 186ms/step - MAE: 0.0265 - loss: 0.0017 - val_MAE: 0.0283 - val_loss: 0.0012\n",
      "Epoch 30/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 178ms/step - MAE: 0.0288 - loss: 0.0022 - val_MAE: 0.0335 - val_loss: 0.0015\n",
      "Epoch 31/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 178ms/step - MAE: 0.0285 - loss: 0.0021 - val_MAE: 0.0326 - val_loss: 0.0015\n",
      "Epoch 32/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 174ms/step - MAE: 0.0277 - loss: 0.0020 - val_MAE: 0.0284 - val_loss: 0.0012\n",
      "Epoch 33/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 178ms/step - MAE: 0.0286 - loss: 0.0021 - val_MAE: 0.0302 - val_loss: 0.0013\n",
      "Epoch 34/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 168ms/step - MAE: 0.0278 - loss: 0.0020 - val_MAE: 0.0336 - val_loss: 0.0015\n",
      "Epoch 35/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 175ms/step - MAE: 0.0264 - loss: 0.0016 - val_MAE: 0.0292 - val_loss: 0.0012\n",
      "Epoch 36/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 188ms/step - MAE: 0.0282 - loss: 0.0019 - val_MAE: 0.0299 - val_loss: 0.0013\n",
      "Epoch 37/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 176ms/step - MAE: 0.0265 - loss: 0.0017 - val_MAE: 0.0341 - val_loss: 0.0017\n",
      "Epoch 38/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 170ms/step - MAE: 0.0284 - loss: 0.0020 - val_MAE: 0.0307 - val_loss: 0.0013\n",
      "Epoch 39/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 175ms/step - MAE: 0.0298 - loss: 0.0021 - val_MAE: 0.0429 - val_loss: 0.0026\n",
      "Epoch 40/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 181ms/step - MAE: 0.0279 - loss: 0.0017 - val_MAE: 0.0361 - val_loss: 0.0018\n",
      "Epoch 41/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 179ms/step - MAE: 0.0290 - loss: 0.0019 - val_MAE: 0.0296 - val_loss: 0.0012\n",
      "Epoch 42/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 169ms/step - MAE: 0.0284 - loss: 0.0019 - val_MAE: 0.0314 - val_loss: 0.0013\n",
      "Epoch 43/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 185ms/step - MAE: 0.0292 - loss: 0.0022 - val_MAE: 0.0369 - val_loss: 0.0018\n",
      "Epoch 44/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 179ms/step - MAE: 0.0259 - loss: 0.0015 - val_MAE: 0.0313 - val_loss: 0.0013\n",
      "Epoch 45/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 197ms/step - MAE: 0.0262 - loss: 0.0015 - val_MAE: 0.0279 - val_loss: 0.0011\n",
      "Epoch 46/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 197ms/step - MAE: 0.0264 - loss: 0.0016 - val_MAE: 0.0318 - val_loss: 0.0014\n",
      "Epoch 47/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 190ms/step - MAE: 0.0252 - loss: 0.0014 - val_MAE: 0.0345 - val_loss: 0.0015\n",
      "Epoch 48/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 184ms/step - MAE: 0.0309 - loss: 0.0023 - val_MAE: 0.0318 - val_loss: 0.0014\n",
      "Epoch 49/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 191ms/step - MAE: 0.0264 - loss: 0.0016 - val_MAE: 0.0319 - val_loss: 0.0015\n",
      "Epoch 50/50\n",
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 182ms/step - MAE: 0.0298 - loss: 0.0021 - val_MAE: 0.0365 - val_loss: 0.0018\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.src.callbacks.history.History at 0x1f6149750d0>"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.compile(optimizer = 'adam', loss = 'mean_squared_error', metrics = ['MAE'])\n",
    "model.fit(x_train, y_train, validation_data = (x_test, y_test) ,epochs = 50)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "c63af9f6-c120-4640-9048-d71ec3ae5d02",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"
     ]
    }
   ],
   "source": [
    "model.save('keras_model.h5')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "8b086cae-2b8a-427c-b717-672bb042cd8a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 41.911 ],\n",
       "       [ 42.468 ],\n",
       "       [ 43.089 ],\n",
       "       [ 43.499 ],\n",
       "       [ 44.782 ],\n",
       "       [ 43.517 ],\n",
       "       [ 44.041 ],\n",
       "       [ 44.688 ],\n",
       "       [ 45.762 ],\n",
       "       [ 45.273 ],\n",
       "       [ 45.798 ],\n",
       "       [ 46.806 ],\n",
       "       [ 46.945 ],\n",
       "       [ 45.461 ],\n",
       "       [ 46.095 ],\n",
       "       [ 43.938 ],\n",
       "       [ 42.196 ],\n",
       "       [ 42.101 ],\n",
       "       [ 41.387 ],\n",
       "       [ 42.975 ],\n",
       "       [ 43.663 ],\n",
       "       [ 41.779 ],\n",
       "       [ 40.326 ],\n",
       "       [ 40.5   ],\n",
       "       [ 41.161 ],\n",
       "       [ 40.78  ],\n",
       "       [ 42.325 ],\n",
       "       [ 43.506 ],\n",
       "       [ 45.005 ],\n",
       "       [ 45.751 ],\n",
       "       [ 45.955 ],\n",
       "       [ 46.574 ],\n",
       "       [ 46.95  ],\n",
       "       [ 48.335 ],\n",
       "       [ 48.62  ],\n",
       "       [ 49.656 ],\n",
       "       [ 48.888 ],\n",
       "       [ 49.48  ],\n",
       "       [ 49.298 ],\n",
       "       [ 50.409 ],\n",
       "       [ 49.944 ],\n",
       "       [ 48.716 ],\n",
       "       [ 47.776 ],\n",
       "       [ 48.242 ],\n",
       "       [ 47.821 ],\n",
       "       [ 48.14  ],\n",
       "       [ 46.77  ],\n",
       "       [ 46.765 ],\n",
       "       [ 45.51  ],\n",
       "       [ 46.566 ],\n",
       "       [ 45.503 ],\n",
       "       [ 46.596 ],\n",
       "       [ 47.506 ],\n",
       "       [ 46.627 ],\n",
       "       [ 47.657 ],\n",
       "       [ 48.088 ],\n",
       "       [ 48.35  ],\n",
       "       [ 48.89  ],\n",
       "       [ 50.077 ],\n",
       "       [ 49.604 ],\n",
       "       [ 48.111 ],\n",
       "       [ 48.99  ],\n",
       "       [ 48.83  ],\n",
       "       [ 49.279 ],\n",
       "       [ 49.417 ],\n",
       "       [ 49.522 ],\n",
       "       [ 49.522 ],\n",
       "       [ 48.168 ],\n",
       "       [ 47.569 ],\n",
       "       [ 47.998 ],\n",
       "       [ 49.097 ],\n",
       "       [ 52.253 ],\n",
       "       [ 53.14  ],\n",
       "       [ 54.35  ],\n",
       "       [ 54.822 ],\n",
       "       [ 54.71  ],\n",
       "       [ 56.382 ],\n",
       "       [ 56.053 ],\n",
       "       [ 57.107 ],\n",
       "       [ 59.491 ],\n",
       "       [ 59.654 ],\n",
       "       [ 59.873 ],\n",
       "       [ 61.362 ],\n",
       "       [ 61.617 ],\n",
       "       [ 61.031 ],\n",
       "       [ 62.465 ],\n",
       "       [ 62.774 ],\n",
       "       [ 61.527 ],\n",
       "       [ 63.027 ],\n",
       "       [ 66.16  ],\n",
       "       [ 69.332 ],\n",
       "       [ 68.223 ],\n",
       "       [ 70.099 ],\n",
       "       [ 69.641 ],\n",
       "       [ 72.133 ],\n",
       "       [ 72.248 ],\n",
       "       [ 72.128 ],\n",
       "       [ 73.9   ],\n",
       "       [ 72.658 ],\n",
       "       [ 72.613 ],\n",
       "       [ 69.452 ],\n",
       "       [ 67.472 ],\n",
       "       [ 78.538 ],\n",
       "       [ 78.817 ],\n",
       "       [ 79.092 ],\n",
       "       [ 78.701 ],\n",
       "       [ 77.663 ],\n",
       "       [ 79.112 ],\n",
       "       [ 82.279 ],\n",
       "       [ 85.237 ],\n",
       "       [ 85.964 ],\n",
       "       [ 88.7   ],\n",
       "       [ 92.669 ],\n",
       "       [ 87.528 ],\n",
       "       [ 85.774 ],\n",
       "       [ 91.913 ],\n",
       "       [ 90.888 ],\n",
       "       [ 87.944 ],\n",
       "       [ 87.8365],\n",
       "       [ 88.455 ],\n",
       "       [ 89.398 ],\n",
       "       [ 90.372 ],\n",
       "       [ 91.435 ],\n",
       "       [ 94.289 ],\n",
       "       [ 95.002 ],\n",
       "       [ 92.561 ],\n",
       "       [ 90.25  ],\n",
       "       [ 90.356 ],\n",
       "       [ 90.363 ],\n",
       "       [ 89.452 ],\n",
       "       [ 88.964 ],\n",
       "       [ 85.905 ],\n",
       "       [ 88.008 ],\n",
       "       [ 87.133 ],\n",
       "       [ 85.354 ],\n",
       "       [ 87.039 ],\n",
       "       [ 90.616 ],\n",
       "       [ 88.186 ],\n",
       "       [ 86.001 ],\n",
       "       [ 87.415 ],\n",
       "       [ 84.035 ],\n",
       "       [ 84.671 ],\n",
       "       [ 76.2   ],\n",
       "       [ 79.518 ],\n",
       "       [ 82.423 ],\n",
       "       [ 79.677 ],\n",
       "       [ 82.632 ],\n",
       "       [ 87.735 ],\n",
       "       [ 87.757 ],\n",
       "       [ 86.402 ],\n",
       "       [ 83.041 ],\n",
       "       [ 85.817 ],\n",
       "       [ 88.789 ],\n",
       "       [ 92.14  ],\n",
       "       [ 90.554 ],\n",
       "       [ 90.412 ],\n",
       "       [ 88.747 ],\n",
       "       [ 89.878 ],\n",
       "       [ 90.399 ],\n",
       "       [ 91.356 ],\n",
       "       [ 94.63  ],\n",
       "       [ 94.359 ],\n",
       "       [ 92.479 ],\n",
       "       [ 94.78  ],\n",
       "       [ 95.386 ],\n",
       "       [ 94.95  ],\n",
       "       [103.799 ],\n",
       "       [106.469 ],\n",
       "       [113.901 ],\n",
       "       [114.825 ],\n",
       "       [110.5   ],\n",
       "       [109.633 ],\n",
       "       [115.    ],\n",
       "       [116.437 ],\n",
       "       [122.44  ],\n",
       "       [120.998 ],\n",
       "       [120.888 ],\n",
       "       [121.79  ],\n",
       "       [120.91  ],\n",
       "       [125.2   ],\n",
       "       [129.61  ],\n",
       "       [131.88  ],\n",
       "       [130.98  ],\n",
       "       [135.58  ],\n",
       "       [130.78  ],\n",
       "       [126.57  ],\n",
       "       [118.11  ],\n",
       "       [126.09  ],\n",
       "       [126.4   ],\n",
       "       [123.99  ],\n",
       "       [123.54  ],\n",
       "       [124.3   ],\n",
       "       [122.67  ],\n",
       "       [128.28  ],\n",
       "       [125.83  ],\n",
       "       [128.2   ],\n",
       "       [131.38  ],\n",
       "       [134.91  ],\n",
       "       [127.4   ],\n",
       "       [129.24  ],\n",
       "       [128.44  ],\n",
       "       [126.36  ],\n",
       "       [117.99  ],\n",
       "       [121.09  ],\n",
       "       [117.93  ],\n",
       "       [123.54  ],\n",
       "       [122.59  ],\n",
       "       [114.25  ],\n",
       "       [112.28  ],\n",
       "       [113.06  ],\n",
       "       [111.59  ],\n",
       "       [103.73  ],\n",
       "       [117.02  ],\n",
       "       [109.21  ],\n",
       "       [107.27  ],\n",
       "       [100.45  ],\n",
       "       [104.25  ],\n",
       "       [ 98.91  ],\n",
       "       [104.97  ],\n",
       "       [104.75  ],\n",
       "       [109.02  ],\n",
       "       [116.14  ],\n",
       "       [118.08  ],\n",
       "       [122.86  ],\n",
       "       [124.58  ],\n",
       "       [130.    ],\n",
       "       [127.25  ],\n",
       "       [128.5   ],\n",
       "       [123.74  ],\n",
       "       [129.37  ],\n",
       "       [126.46  ],\n",
       "       [128.3   ],\n",
       "       [125.61  ],\n",
       "       [117.59  ],\n",
       "       [119.37  ],\n",
       "       [108.    ],\n",
       "       [106.21  ],\n",
       "       [107.21  ],\n",
       "       [102.83  ],\n",
       "       [106.47  ],\n",
       "       [108.1   ],\n",
       "       [116.91  ],\n",
       "       [119.14  ],\n",
       "       [119.1   ],\n",
       "       [116.78  ],\n",
       "       [115.59  ],\n",
       "       [113.37  ],\n",
       "       [117.87  ],\n",
       "       [116.    ],\n",
       "       [116.26  ],\n",
       "       [120.87  ],\n",
       "       [123.51  ],\n",
       "       [124.04  ],\n",
       "       [121.4   ],\n",
       "       [121.44  ],\n",
       "       [117.    ],\n",
       "       [118.85  ],\n",
       "       [122.85  ],\n",
       "       [124.92  ],\n",
       "       [127.72  ],\n",
       "       [132.89  ],\n",
       "       [132.65  ],\n",
       "       [134.81  ],\n",
       "       [134.8   ],\n",
       "       [138.07  ],\n",
       "       [131.6   ],\n",
       "       [135.72  ],\n",
       "       [136.93  ],\n",
       "       [138.    ],\n",
       "       [143.71  ],\n",
       "       [143.59  ],\n",
       "       [139.56  ],\n",
       "       [140.41  ],\n",
       "       [141.54  ],\n",
       "       [140.52  ],\n",
       "       [141.25  ],\n",
       "       [139.335 ],\n",
       "       [132.76  ],\n",
       "       [135.4   ],\n",
       "       [136.05  ],\n",
       "       [139.91  ],\n",
       "       [145.61  ],\n",
       "       [148.88  ],\n",
       "       [147.63  ],\n",
       "       [145.26  ],\n",
       "       [148.29  ],\n",
       "       [146.27  ],\n",
       "       [146.76  ],\n",
       "       [141.98  ],\n",
       "       [140.15  ],\n",
       "       [147.01  ],\n",
       "       [145.89  ],\n",
       "       [146.67  ],\n",
       "       [141.95  ],\n",
       "       [136.02  ],\n",
       "       [136.92  ],\n",
       "       [135.34  ],\n",
       "       [138.25  ],\n",
       "       [138.63  ],\n",
       "       [140.26  ],\n",
       "       [145.14  ],\n",
       "       [145.06  ],\n",
       "       [142.44  ],\n",
       "       [138.81  ],\n",
       "       [135.07  ],\n",
       "       [139.31  ],\n",
       "       [137.34  ],\n",
       "       [134.25  ],\n",
       "       [132.    ],\n",
       "       [130.39  ],\n",
       "       [128.91  ],\n",
       "       [130.68  ],\n",
       "       [134.7   ],\n",
       "       [139.67  ],\n",
       "       [140.22  ],\n",
       "       [139.93  ],\n",
       "       [137.01  ],\n",
       "       [137.49  ],\n",
       "       [134.29  ],\n",
       "       [138.31  ],\n",
       "       [144.47  ],\n",
       "       [149.43  ],\n",
       "       [140.14  ],\n",
       "       [140.11  ],\n",
       "       [135.91  ],\n",
       "       [133.23  ],\n",
       "       [131.76  ],\n",
       "       [136.24  ],\n",
       "       [133.57  ],\n",
       "       [137.71  ],\n",
       "       [140.83  ],\n",
       "       [147.07  ],\n",
       "       [147.22  ],\n",
       "       [142.62  ],\n",
       "       [118.42  ],\n",
       "       [128.99  ],\n",
       "       [123.7   ],\n",
       "       [124.65  ],\n",
       "       [120.07  ],\n",
       "       [116.66  ],\n",
       "       [118.65  ],\n",
       "       [124.83  ],\n",
       "       [128.68  ],\n",
       "       [129.84  ],\n",
       "       [133.57  ],\n",
       "       [132.8   ],\n",
       "       [131.14  ],\n",
       "       [135.29  ],\n",
       "       [138.85  ],\n",
       "       [139.4   ],\n",
       "       [139.23  ],\n",
       "       [140.11  ],\n",
       "       [134.43  ],\n",
       "       [130.28  ],\n",
       "       [126.63  ],\n",
       "       [131.28  ],\n",
       "       [120.15  ],\n",
       "       [124.92  ],\n",
       "       [114.06  ],\n",
       "       [115.99  ],\n",
       "       [117.3   ],\n",
       "       [110.57  ],\n",
       "       [112.69  ],\n",
       "       [106.98  ],\n",
       "       [108.76  ],\n",
       "       [115.74  ],\n",
       "       [115.58  ],\n",
       "       [121.67  ],\n",
       "       [119.53  ],\n",
       "       [115.43  ],\n",
       "       [117.52  ],\n",
       "       [118.53  ],\n",
       "       [117.7   ],\n",
       "       [121.41  ],\n",
       "       [120.69  ],\n",
       "       [113.76  ],\n",
       "       [111.43  ],\n",
       "       [109.67  ],\n",
       "       [108.38  ],\n",
       "       [110.15  ],\n",
       "       [110.42  ],\n",
       "       [101.8   ],\n",
       "       [ 94.31  ],\n",
       "       [ 97.64  ],\n",
       "       [ 96.3   ],\n",
       "       [114.33  ],\n",
       "       [107.57  ],\n",
       "       [110.93  ],\n",
       "       [110.71  ],\n",
       "       [112.2   ],\n",
       "       [104.49  ],\n",
       "       [101.49  ],\n",
       "       [ 96.91  ],\n",
       "       [ 98.89  ],\n",
       "       [102.71  ],\n",
       "       [106.43  ],\n",
       "       [111.01  ],\n",
       "       [108.73  ],\n",
       "       [109.02  ],\n",
       "       [108.92  ],\n",
       "       [111.61  ],\n",
       "       [114.5   ],\n",
       "       [113.82  ],\n",
       "       [113.54  ],\n",
       "       [117.06  ],\n",
       "       [117.37  ],\n",
       "       [116.65  ],\n",
       "       [123.    ],\n",
       "       [129.93  ],\n",
       "       [135.34  ],\n",
       "       [134.83  ],\n",
       "       [135.4   ],\n",
       "       [135.57  ],\n",
       "       [134.38  ],\n",
       "       [131.8   ],\n",
       "       [132.83  ],\n",
       "       [131.29  ],\n",
       "       [135.5   ],\n",
       "       [134.81  ],\n",
       "       [139.19  ],\n",
       "       [135.13  ],\n",
       "       [137.38  ],\n",
       "       [141.22  ],\n",
       "       [141.92  ],\n",
       "       [139.99  ],\n",
       "       [141.72  ],\n",
       "       [142.63  ],\n",
       "       [143.96  ],\n",
       "       [142.83  ],\n",
       "       [145.    ],\n",
       "       [141.97  ],\n",
       "       [144.69  ],\n",
       "       [144.12  ],\n",
       "       [145.48  ],\n",
       "       [143.85  ],\n",
       "       [144.17  ],\n",
       "       [147.9   ],\n",
       "       [154.31  ],\n",
       "       [155.02  ],\n",
       "       [157.75  ],\n",
       "       [157.99  ],\n",
       "       [153.3   ],\n",
       "       [157.25  ],\n",
       "       [159.34  ],\n",
       "       [158.24  ],\n",
       "       [160.    ],\n",
       "       [162.88  ],\n",
       "       [164.1   ],\n",
       "       [164.92  ],\n",
       "       [164.07  ],\n",
       "       [170.7   ],\n",
       "       [171.37  ],\n",
       "       [173.    ],\n",
       "       [172.41  ],\n",
       "       [171.38  ],\n",
       "       [167.03  ],\n",
       "       [170.78  ],\n",
       "       [173.74  ],\n",
       "       [173.5   ],\n",
       "       [176.75  ],\n",
       "       [175.51  ],\n",
       "       [179.27  ],\n",
       "       [177.87  ],\n",
       "       [173.72  ],\n",
       "       [180.    ],\n",
       "       [178.26  ],\n",
       "       [179.42  ],\n",
       "       [180.77  ],\n",
       "       [182.7   ],\n",
       "       [182.06  ],\n",
       "       [183.16  ],\n",
       "       [181.59  ],\n",
       "       [182.02  ],\n",
       "       [180.45  ],\n",
       "       [182.01  ],\n",
       "       [175.64  ],\n",
       "       [175.4   ],\n",
       "       [174.98  ],\n",
       "       [177.99  ],\n",
       "       [179.81  ],\n",
       "       [181.77  ],\n",
       "       [181.6   ],\n",
       "       [180.17  ],\n",
       "       [174.18  ],\n",
       "       [170.78  ],\n",
       "       [170.62  ],\n",
       "       [171.66  ],\n",
       "       [167.02  ],\n",
       "       [168.31  ],\n",
       "       [170.76  ],\n",
       "       [177.33  ],\n",
       "       [177.17  ],\n",
       "       [177.82  ],\n",
       "       [177.75  ],\n",
       "       [174.88  ],\n",
       "       [170.29  ],\n",
       "       [176.24  ],\n",
       "       [176.67  ],\n",
       "       [183.61  ],\n",
       "       [178.43  ],\n",
       "       [176.97  ],\n",
       "       [177.69  ],\n",
       "       [178.19  ]])"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test.shape\n",
    "test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "839cea49-8d0d-459a-9866-7acb16a143f0",
   "metadata": {},
   "outputs": [],
   "source": [
    "past_100_days = pd.DataFrame(train[-100:])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "7f51f92a-08dc-4ee5-9793-ceb0f0d98a1f",
   "metadata": {},
   "outputs": [],
   "source": [
    "test_df = pd.DataFrame(test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "fcf953e0-abef-4838-aeed-cac499ec187f",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_df = pd.concat([past_100_days, test_df], ignore_index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "c1c62871-67ef-46e2-99a1-f72f89c72fae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>27.802</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>27.562</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28.680</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>29.151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>28.571</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        0\n",
       "0  27.802\n",
       "1  27.562\n",
       "2  28.680\n",
       "3  29.151\n",
       "4  28.571"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "3f289941-07cd-40ea-b48b-52aa9b01a852",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.00153799],\n",
       "       [0.        ],\n",
       "       [0.00716446],\n",
       "       [0.01018276],\n",
       "       [0.00646596],\n",
       "       [0.00847816],\n",
       "       [0.00651082],\n",
       "       [0.00498565],\n",
       "       [0.00891392],\n",
       "       [0.01058008],\n",
       "       [0.01676407],\n",
       "       [0.0263765 ],\n",
       "       [0.02372347],\n",
       "       [0.02315954],\n",
       "       [0.0200323 ],\n",
       "       [0.01907106],\n",
       "       [0.06676151],\n",
       "       [0.07295191],\n",
       "       [0.08041756],\n",
       "       [0.0658259 ],\n",
       "       [0.07823234],\n",
       "       [0.07539347],\n",
       "       [0.07439378],\n",
       "       [0.07108069],\n",
       "       [0.06352533],\n",
       "       [0.0701579 ],\n",
       "       [0.07182405],\n",
       "       [0.07638675],\n",
       "       [0.08625551],\n",
       "       [0.09891187],\n",
       "       [0.09670742],\n",
       "       [0.09695735],\n",
       "       [0.10410899],\n",
       "       [0.09921947],\n",
       "       [0.09909131],\n",
       "       [0.09386214],\n",
       "       [0.08375628],\n",
       "       [0.09172819],\n",
       "       [0.0868643 ],\n",
       "       [0.08497385],\n",
       "       [0.09445812],\n",
       "       [0.09516944],\n",
       "       [0.09455424],\n",
       "       [0.09318287],\n",
       "       [0.09574618],\n",
       "       [0.0936763 ],\n",
       "       [0.09511817],\n",
       "       [0.10471137],\n",
       "       [0.11800856],\n",
       "       [0.11475315],\n",
       "       [0.12111017],\n",
       "       [0.12772993],\n",
       "       [0.12505767],\n",
       "       [0.11507998],\n",
       "       [0.10731954],\n",
       "       [0.10926125],\n",
       "       [0.11609889],\n",
       "       [0.11464421],\n",
       "       [0.11751512],\n",
       "       [0.12296217],\n",
       "       [0.12282759],\n",
       "       [0.12140495],\n",
       "       [0.10706321],\n",
       "       [0.10863965],\n",
       "       [0.10969702],\n",
       "       [0.11441672],\n",
       "       [0.10959448],\n",
       "       [0.096073  ],\n",
       "       [0.09500923],\n",
       "       [0.08518533],\n",
       "       [0.10375654],\n",
       "       [0.10495489],\n",
       "       [0.10204552],\n",
       "       [0.10113234],\n",
       "       [0.10084718],\n",
       "       [0.12435276],\n",
       "       [0.1160284 ],\n",
       "       [0.1253076 ],\n",
       "       [0.12560879],\n",
       "       [0.1182713 ],\n",
       "       [0.12350687],\n",
       "       [0.13599662],\n",
       "       [0.13907259],\n",
       "       [0.13965575],\n",
       "       [0.13423434],\n",
       "       [0.13448426],\n",
       "       [0.12495514],\n",
       "       [0.11970035],\n",
       "       [0.11541321],\n",
       "       [0.11288834],\n",
       "       [0.11091459],\n",
       "       [0.11485569],\n",
       "       [0.11547088],\n",
       "       [0.10469855],\n",
       "       [0.1051215 ],\n",
       "       [0.10226341],\n",
       "       [0.09405439],\n",
       "       [0.08622347],\n",
       "       [0.09002358],\n",
       "       [0.09394545],\n",
       "       [0.09195248],\n",
       "       [0.09552189],\n",
       "       [0.09950144],\n",
       "       [0.10212883],\n",
       "       [0.11035066],\n",
       "       [0.10224418],\n",
       "       [0.10560212],\n",
       "       [0.10974828],\n",
       "       [0.11663078],\n",
       "       [0.11349713],\n",
       "       [0.11686148],\n",
       "       [0.12332103],\n",
       "       [0.12421178],\n",
       "       [0.11470189],\n",
       "       [0.11876474],\n",
       "       [0.10494207],\n",
       "       [0.09377884],\n",
       "       [0.09317005],\n",
       "       [0.08859454],\n",
       "       [0.09877089],\n",
       "       [0.10317979],\n",
       "       [0.09110658],\n",
       "       [0.08179535],\n",
       "       [0.08291039],\n",
       "       [0.08714626],\n",
       "       [0.08470471],\n",
       "       [0.09460551],\n",
       "       [0.10217369],\n",
       "       [0.11177971],\n",
       "       [0.11656029],\n",
       "       [0.11786758],\n",
       "       [0.12183431],\n",
       "       [0.12424382],\n",
       "       [0.1331193 ],\n",
       "       [0.13494566],\n",
       "       [0.14158464],\n",
       "       [0.13666308],\n",
       "       [0.14045678],\n",
       "       [0.13929047],\n",
       "       [0.14641008],\n",
       "       [0.14343023],\n",
       "       [0.13556085],\n",
       "       [0.12953707],\n",
       "       [0.13252333],\n",
       "       [0.12982544],\n",
       "       [0.13186968],\n",
       "       [0.12309033],\n",
       "       [0.12305829],\n",
       "       [0.11501589],\n",
       "       [0.12178304],\n",
       "       [0.11497103],\n",
       "       [0.12197529],\n",
       "       [0.12780683],\n",
       "       [0.12217395],\n",
       "       [0.12877448],\n",
       "       [0.13153645],\n",
       "       [0.13321542],\n",
       "       [0.13667589],\n",
       "       [0.14428253],\n",
       "       [0.14125141],\n",
       "       [0.13168384],\n",
       "       [0.13731672],\n",
       "       [0.1362914 ],\n",
       "       [0.13916872],\n",
       "       [0.14005306],\n",
       "       [0.14072593],\n",
       "       [0.14072593],\n",
       "       [0.13204911],\n",
       "       [0.12821055],\n",
       "       [0.1309597 ],\n",
       "       [0.13800241],\n",
       "       [0.15822696],\n",
       "       [0.1639111 ],\n",
       "       [0.17166513],\n",
       "       [0.17468984],\n",
       "       [0.17397211],\n",
       "       [0.18468676],\n",
       "       [0.18257844],\n",
       "       [0.18933277],\n",
       "       [0.20461012],\n",
       "       [0.20565467],\n",
       "       [0.20705808],\n",
       "       [0.21660002],\n",
       "       [0.21823413],\n",
       "       [0.21447888],\n",
       "       [0.22366836],\n",
       "       [0.22564852],\n",
       "       [0.21765739],\n",
       "       [0.22726981],\n",
       "       [0.24734697],\n",
       "       [0.26767405],\n",
       "       [0.26056726],\n",
       "       [0.2725892 ],\n",
       "       [0.26965421],\n",
       "       [0.28562365],\n",
       "       [0.28636061],\n",
       "       [0.28559161],\n",
       "       [0.29694709],\n",
       "       [0.288988  ],\n",
       "       [0.28869963],\n",
       "       [0.26844304],\n",
       "       [0.25575464],\n",
       "       [0.32666872],\n",
       "       [0.32845663],\n",
       "       [0.33021891],\n",
       "       [0.32771327],\n",
       "       [0.32106147],\n",
       "       [0.33034707],\n",
       "       [0.35064211],\n",
       "       [0.36959782],\n",
       "       [0.37425664],\n",
       "       [0.39178971],\n",
       "       [0.41722419],\n",
       "       [0.3842792 ],\n",
       "       [0.37303906],\n",
       "       [0.41237952],\n",
       "       [0.40581103],\n",
       "       [0.38694504],\n",
       "       [0.38625615],\n",
       "       [0.39021968],\n",
       "       [0.39626269],\n",
       "       [0.40250436],\n",
       "       [0.40931636],\n",
       "       [0.42760561],\n",
       "       [0.43217472],\n",
       "       [0.41653209],\n",
       "       [0.40172255],\n",
       "       [0.40240183],\n",
       "       [0.40244668],\n",
       "       [0.39660874],\n",
       "       [0.39348149],\n",
       "       [0.37387855],\n",
       "       [0.38735517],\n",
       "       [0.38174792],\n",
       "       [0.37034759],\n",
       "       [0.38114554],\n",
       "       [0.40406798],\n",
       "       [0.38849585],\n",
       "       [0.37449375],\n",
       "       [0.38355506],\n",
       "       [0.36189506],\n",
       "       [0.36597073],\n",
       "       [0.31168615],\n",
       "       [0.33294884],\n",
       "       [0.3515649 ],\n",
       "       [0.33396775],\n",
       "       [0.35290423],\n",
       "       [0.38560571],\n",
       "       [0.38574669],\n",
       "       [0.37706347],\n",
       "       [0.35552522],\n",
       "       [0.37331462],\n",
       "       [0.39236004],\n",
       "       [0.4138342 ],\n",
       "       [0.40367067],\n",
       "       [0.40276069],\n",
       "       [0.3920909 ],\n",
       "       [0.39933867],\n",
       "       [0.40267738],\n",
       "       [0.40881011],\n",
       "       [0.42979083],\n",
       "       [0.42805419],\n",
       "       [0.41600661],\n",
       "       [0.43075208],\n",
       "       [0.4346355 ],\n",
       "       [0.43184148],\n",
       "       [0.4885484 ],\n",
       "       [0.50565852],\n",
       "       [0.55328489],\n",
       "       [0.55920614],\n",
       "       [0.53149031],\n",
       "       [0.52593433],\n",
       "       [0.56032759],\n",
       "       [0.5695363 ],\n",
       "       [0.60800523],\n",
       "       [0.59876448],\n",
       "       [0.59805957],\n",
       "       [0.60383984],\n",
       "       [0.59820055],\n",
       "       [0.62569209],\n",
       "       [0.65395263],\n",
       "       [0.66849944],\n",
       "       [0.66273198],\n",
       "       [0.69221009],\n",
       "       [0.66145032],\n",
       "       [0.63447144],\n",
       "       [0.58025736],\n",
       "       [0.63139547],\n",
       "       [0.63338204],\n",
       "       [0.61793807],\n",
       "       [0.61505434],\n",
       "       [0.61992464],\n",
       "       [0.60947913],\n",
       "       [0.64542961],\n",
       "       [0.62972931],\n",
       "       [0.64491695],\n",
       "       [0.66529529],\n",
       "       [0.68791654],\n",
       "       [0.63979032],\n",
       "       [0.65158156],\n",
       "       [0.64645494],\n",
       "       [0.6331257 ],\n",
       "       [0.57948836],\n",
       "       [0.59935404],\n",
       "       [0.57910387],\n",
       "       [0.61505434],\n",
       "       [0.60896647],\n",
       "       [0.55552138],\n",
       "       [0.54289706],\n",
       "       [0.54789552],\n",
       "       [0.53847534],\n",
       "       [0.48810622],\n",
       "       [0.57327233],\n",
       "       [0.52322362],\n",
       "       [0.51079155],\n",
       "       [0.46708705],\n",
       "       [0.49143853],\n",
       "       [0.45721829],\n",
       "       [0.4960525 ],\n",
       "       [0.49464267],\n",
       "       [0.52200605],\n",
       "       [0.56763304],\n",
       "       [0.58006511],\n",
       "       [0.61069671],\n",
       "       [0.62171896],\n",
       "       [0.65645186],\n",
       "       [0.63882908],\n",
       "       [0.64683943],\n",
       "       [0.616336  ],\n",
       "       [0.65241464],\n",
       "       [0.63376653],\n",
       "       [0.64555778],\n",
       "       [0.62831949],\n",
       "       [0.57692505],\n",
       "       [0.5883318 ],\n",
       "       [0.5154696 ],\n",
       "       [0.50399877],\n",
       "       [0.51040705],\n",
       "       [0.48233877],\n",
       "       [0.50566492],\n",
       "       [0.51611043],\n",
       "       [0.57256742],\n",
       "       [0.58685789],\n",
       "       [0.58660156],\n",
       "       [0.57173434],\n",
       "       [0.56410848],\n",
       "       [0.54988209],\n",
       "       [0.57871937],\n",
       "       [0.56673588],\n",
       "       [0.56840203],\n",
       "       [0.59794422],\n",
       "       [0.61486209],\n",
       "       [0.61825848],\n",
       "       [0.60134061],\n",
       "       [0.60159694],\n",
       "       [0.57314416],\n",
       "       [0.58499949],\n",
       "       [0.61063263],\n",
       "       [0.62389778],\n",
       "       [0.64184097],\n",
       "       [0.6749718 ],\n",
       "       [0.67343382],\n",
       "       [0.68727571],\n",
       "       [0.68721163],\n",
       "       [0.70816672],\n",
       "       [0.66670512],\n",
       "       [0.69310725],\n",
       "       [0.70086127],\n",
       "       [0.70771814],\n",
       "       [0.74430944],\n",
       "       [0.74354045],\n",
       "       [0.71771506],\n",
       "       [0.7231621 ],\n",
       "       [0.73040347],\n",
       "       [0.72386702],\n",
       "       [0.72854506],\n",
       "       [0.7162732 ],\n",
       "       [0.67413873],\n",
       "       [0.6910566 ],\n",
       "       [0.69522198],\n",
       "       [0.71995796],\n",
       "       [0.75648518],\n",
       "       [0.77744027],\n",
       "       [0.76942992],\n",
       "       [0.75424228],\n",
       "       [0.77365939],\n",
       "       [0.76071465],\n",
       "       [0.76385471],\n",
       "       [0.73322311],\n",
       "       [0.72149595],\n",
       "       [0.76545678],\n",
       "       [0.7582795 ],\n",
       "       [0.76327797],\n",
       "       [0.73303086],\n",
       "       [0.69502973],\n",
       "       [0.70079719],\n",
       "       [0.6906721 ],\n",
       "       [0.70932021],\n",
       "       [0.71175536],\n",
       "       [0.72220086],\n",
       "       [0.75347329],\n",
       "       [0.75296063],\n",
       "       [0.73617092],\n",
       "       [0.71290885],\n",
       "       [0.68894186],\n",
       "       [0.71611299],\n",
       "       [0.70348867],\n",
       "       [0.68368707],\n",
       "       [0.66926843],\n",
       "       [0.65895109],\n",
       "       [0.64946683],\n",
       "       [0.66080949],\n",
       "       [0.6865708 ],\n",
       "       [0.71841997],\n",
       "       [0.72194453],\n",
       "       [0.72008613],\n",
       "       [0.70137394],\n",
       "       [0.70444991],\n",
       "       [0.6839434 ],\n",
       "       [0.70970471],\n",
       "       [0.74917974],\n",
       "       [0.78096483],\n",
       "       [0.72143187],\n",
       "       [0.72123962],\n",
       "       [0.69432482],\n",
       "       [0.67715062],\n",
       "       [0.66773044],\n",
       "       [0.69643956],\n",
       "       [0.67932944],\n",
       "       [0.70585974],\n",
       "       [0.72585358],\n",
       "       [0.76584128],\n",
       "       [0.76680252],\n",
       "       [0.73732441],\n",
       "       [0.58224392],\n",
       "       [0.64997949],\n",
       "       [0.61607967],\n",
       "       [0.62216754],\n",
       "       [0.59281759],\n",
       "       [0.57096534],\n",
       "       [0.58371783],\n",
       "       [0.62332103],\n",
       "       [0.64799293],\n",
       "       [0.65542654],\n",
       "       [0.67932944],\n",
       "       [0.67439506],\n",
       "       [0.66375731],\n",
       "       [0.69035169],\n",
       "       [0.71316518],\n",
       "       [0.71668974],\n",
       "       [0.71560033],\n",
       "       [0.72123962],\n",
       "       [0.68484056],\n",
       "       [0.65824618],\n",
       "       [0.63485594],\n",
       "       [0.66465447],\n",
       "       [0.59333026],\n",
       "       [0.62389778],\n",
       "       [0.5543038 ],\n",
       "       [0.56667179],\n",
       "       [0.57506665],\n",
       "       [0.53193889],\n",
       "       [0.54552445],\n",
       "       [0.50893315],\n",
       "       [0.5203399 ],\n",
       "       [0.56506972],\n",
       "       [0.5640444 ],\n",
       "       [0.60307085],\n",
       "       [0.58935712],\n",
       "       [0.56308315],\n",
       "       [0.57647647],\n",
       "       [0.58294884],\n",
       "       [0.57762996],\n",
       "       [0.6014047 ],\n",
       "       [0.59679073],\n",
       "       [0.55238132],\n",
       "       [0.53745002],\n",
       "       [0.52617143],\n",
       "       [0.51790475],\n",
       "       [0.52924741],\n",
       "       [0.53097765],\n",
       "       [0.47573823],\n",
       "       [0.42774018],\n",
       "       [0.44907977],\n",
       "       [0.44049267],\n",
       "       [0.55603404],\n",
       "       [0.51271404],\n",
       "       [0.53424587],\n",
       "       [0.53283605],\n",
       "       [0.54238439],\n",
       "       [0.49297652],\n",
       "       [0.47375167],\n",
       "       [0.44440172],\n",
       "       [0.45709013],\n",
       "       [0.48156977],\n",
       "       [0.50540859],\n",
       "       [0.53475854],\n",
       "       [0.52014765],\n",
       "       [0.52200605],\n",
       "       [0.52136522],\n",
       "       [0.53860351],\n",
       "       [0.55712345],\n",
       "       [0.55276582],\n",
       "       [0.5509715 ],\n",
       "       [0.57352866],\n",
       "       [0.57551523],\n",
       "       [0.57090126],\n",
       "       [0.61159387],\n",
       "       [0.65600328],\n",
       "       [0.6906721 ],\n",
       "       [0.68740388],\n",
       "       [0.6910566 ],\n",
       "       [0.69214601],\n",
       "       [0.68452015],\n",
       "       [0.66798677],\n",
       "       [0.67458731],\n",
       "       [0.66471855],\n",
       "       [0.69169743],\n",
       "       [0.68727571],\n",
       "       [0.715344  ],\n",
       "       [0.68932636],\n",
       "       [0.703745  ],\n",
       "       [0.72835281],\n",
       "       [0.73283861],\n",
       "       [0.72047062],\n",
       "       [0.73155696],\n",
       "       [0.7373885 ],\n",
       "       [0.74591151],\n",
       "       [0.73867015],\n",
       "       [0.75257613],\n",
       "       [0.73315903],\n",
       "       [0.75058956],\n",
       "       [0.74693684],\n",
       "       [0.75565211],\n",
       "       [0.7452066 ],\n",
       "       [0.74725725],\n",
       "       [0.77116016],\n",
       "       [0.81223726],\n",
       "       [0.81678714],\n",
       "       [0.83428176],\n",
       "       [0.83581975],\n",
       "       [0.80576489],\n",
       "       [0.83107762],\n",
       "       [0.84447093],\n",
       "       [0.83742182],\n",
       "       [0.8487004 ],\n",
       "       [0.86715626],\n",
       "       [0.87497437],\n",
       "       [0.88022916],\n",
       "       [0.87478212],\n",
       "       [0.91726905],\n",
       "       [0.9215626 ],\n",
       "       [0.9320081 ],\n",
       "       [0.92822721],\n",
       "       [0.92162668],\n",
       "       [0.89375064],\n",
       "       [0.91778171],\n",
       "       [0.93675023],\n",
       "       [0.93521224],\n",
       "       [0.95603917],\n",
       "       [0.94809289],\n",
       "       [0.97218804],\n",
       "       [0.96321645],\n",
       "       [0.93662207],\n",
       "       [0.97686609],\n",
       "       [0.96571568],\n",
       "       [0.97314929],\n",
       "       [0.98180047],\n",
       "       [0.99416846],\n",
       "       [0.99006716],\n",
       "       [0.99711627],\n",
       "       [0.98705527],\n",
       "       [0.98981083],\n",
       "       [0.97974982],\n",
       "       [0.98974674],\n",
       "       [0.94892597],\n",
       "       [0.94738798],\n",
       "       [0.9446965 ],\n",
       "       [0.96398544],\n",
       "       [0.97564852],\n",
       "       [0.98820876],\n",
       "       [0.98711935],\n",
       "       [0.9779555 ],\n",
       "       [0.93956988],\n",
       "       [0.91778171],\n",
       "       [0.91675638],\n",
       "       [0.923421  ],\n",
       "       [0.89368656],\n",
       "       [0.90195325],\n",
       "       [0.91765354],\n",
       "       [0.95975597],\n",
       "       [0.95873065],\n",
       "       [0.96289603],\n",
       "       [0.96244745],\n",
       "       [0.94405568],\n",
       "       [0.91464165],\n",
       "       [0.95277094],\n",
       "       [0.9555265 ],\n",
       "       [1.        ],\n",
       "       [0.96680509],\n",
       "       [0.95744899],\n",
       "       [0.96206295],\n",
       "       [0.9652671 ]])"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "input_data = scaler.fit_transform(final_df)\n",
    "input_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "9595e1c2-3079-40a2-83e4-cf4bd770f7f2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 70ms/step\n"
     ]
    }
   ],
   "source": [
    "# Making predictions\n",
    "\n",
    "y_pred = model.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "326fac68-48a2-4f1f-b71b-463e314333e7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1911, 1)"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "fc344418-f14b-47b1-bb1d-085da0adbfaa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.00404412, 0.00415691, 0.00419382, ..., 0.82900689, 0.84116795,\n",
       "       0.85371866])"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "bb511af4-1d04-4207-beff-ebfe628c20bd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.07157461],\n",
       "       [0.07157069],\n",
       "       [0.07158671],\n",
       "       ...,\n",
       "       [0.8317584 ],\n",
       "       [0.82492185],\n",
       "       [0.8176162 ]], dtype=float32)"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "922ceea5-e5b1-4b00-b818-1e5568871933",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.00640828])"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scaler.scale_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "253f63d1-38b6-4483-bc8e-27cc2a28ee94",
   "metadata": {},
   "outputs": [],
   "source": [
    "scale_factor = 1/0.00640828\n",
    "y_pred = y_pred * scale_factor\n",
    "y_test = y_test * scale_factor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "4e5fe6b4-a327-4073-ad7e-df45a8424c09",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (12,6))\n",
    "plt.plot(y_test, 'b', label = \"Original Price\")\n",
    "plt.plot(y_pred, 'r', label = \"Predicted Price\")\n",
    "plt.title(\"LSTM Nvidia Stock Price Prediction (Test Set)\")\n",
    "plt.xlabel('Time')\n",
    "plt.ylabel('Price')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "3c123827-c0e1-4555-b275-31bb4ffa2b01",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Model Accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "211e83b0-c89f-45b3-9fec-6c00678bdbaf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RMSE: 6.61\n",
      "MAE: 5.69\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import mean_squared_error, mean_absolute_error\n",
    "import numpy as np\n",
    "\n",
    "rmse = np.sqrt(mean_squared_error(y_test, y_pred))\n",
    "mae = mean_absolute_error(y_test, y_pred)\n",
    "\n",
    "print(f\"RMSE: {rmse:.2f}\")\n",
    "print(f\"MAE: {mae:.2f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ea8f607a-3fc5-4575-95ad-31d1e349d92b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
